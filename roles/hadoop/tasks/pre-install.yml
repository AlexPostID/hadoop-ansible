---
# Create hadoop group
- name: Create hadoop group
  group:
    name: "{{hadoop_group}}"
    system: yes

# Create hadoop user
- name: Create hadoop user
  user:
    name: "{{hadoop_user}}"
    group: "{{hadoop_group}}"
    system: yes

# Create remote .ssh folder in user home directory
- name: Create remote .ssh folder
  file:
    path: "{{hadoop_user_home}}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"

#
# In case we need to generate ssh keys
#

# Create local .ssh folder for ssh keys when generate_hadoop_ssh_key=true
- name: Create local .ssh folder
  connection: local
  become: false
  file:
    path: "{{ local_ssh_key_dir }}"
    state: directory
    mode: 0700
  when: generate_hadoop_ssh_key is defined and generate_hadoop_ssh_key

# Generate ssh keys when generate_hadoop_ssh_key=true
- name: Generate ssh keys
  command: "ssh-keygen -t rsa -f {{ local_ssh_key_dir }}/hadoop_id_rsa -q -N ''"
  connection: local
  become: false
  run_once: true
  args:
    creates: "{{ local_ssh_key_dir }}/hadoop_id_rsa"
  when: generate_hadoop_ssh_key is defined and generate_hadoop_ssh_key

# Copy generated private ssh key when generate_hadoop_ssh_key == "true"
- name: Copy generated private ssh key
  copy:
    src: "{{ local_ssh_key_dir }}/hadoop_id_rsa"
    dest: "{{hadoop_user_home}}/.ssh/id_rsa"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0600
  when: generate_hadoop_ssh_key is defined and generate_hadoop_ssh_key

# Add generated public ssh key to authorized_key
- name: Add generated public ssh key to authorized_keys
  authorized_key:
    user: "{{ hadoop_user }}"
    state: present
    key: "{{ lookup('file', '{{ local_ssh_key_dir }}/hadoop_id_rsa.pub') }}"
  when: generate_hadoop_ssh_key is defined and generate_hadoop_ssh_key


#
# In case ssh keys provided by user
#

# Copy private ssh key provided by user
- name: Copy provided ssh private key
  copy:
    src: "{{ hadoop_ssh_private_key }}"
    dest: "{{hadoop_user_home}}/.ssh/id_rsa"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0600
  when: generate_hadoop_ssh_key is undefined or not generate_hadoop_ssh_key

# Add public ssh key provided by user to authorized_key
- name: Add provided public ssh key to authorized_keys
  authorized_key:
    user: "{{ hadoop_user }}"
    state: present
    key: "{{ lookup('file', '{{ local_ssh_key_dir }}/hadoop_id_rsa.pub') }}"
  when: generate_hadoop_ssh_key is undefined or not generate_hadoop_ssh_key

#
# Install pakages
#

# Pakages for RedHat family OS
- name: Yum install prerequisites
  yum: pkg={{ item }} state=installed
  environment: "{{proxy_env}}"
  when: ansible_os_family == 'RedHat'
  with_items:
    - wget
    - gzip
    - tar
    - java-1.7.0-openjdk

# Pakages for Debian family OS
- name: Apt install prerequisites
  apt: pkg={{ item }} state=installed update_cache=yes
  environment: "{{proxy_env}}"
  when: ansible_os_family == 'Debian'
  with_items:
    - wget
    - gzip
    - tar
    - default-jre-headless
